;Método de Newton Raphson

;Xn+1 = (1 / 2) * (Xn + (A / Xn))
;Primeira iteração: Xn = chute inicial
;Outras iterações Xn = resultado iteração anterior
;A = valor para calcular a raíz quadrada

PUSH 100        ;número que quer a raiz quadrada -> A
PUSH 0
ADD
POP
POP
MOV $R0, $R2    ;coloca A em $R2


PUSH 3          ;coloca o chute inicial na pilha
PUSH $R2
DIV             ;(A / Xn)
POP
POP
PUSH $R0
PUSH 3
ADD             ;(Xn + (A / Xn))
POP
POP
PUSH 2
PUSH $R0
DIV             ;(Xn + (A / Xn)) / 2           
POP
POP
MOV $R0, $R1    ;salva resultado primeira iteração em $R1    


PUSH $R1        ;coloca resultado da iteração anterior na pilha    
PUSH $R2        
DIV             ;(A / Xn)          
POP
POP
PUSH $R1
PUSH $R0
ADD             ;(Xn + (A / Xn))
POP
POP
PUSH 2
PUSH $R0
DIV             ;(Xn + (A / Xn)) / 2  
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
MOV $R0,$R1


PUSH $R1
PUSH $R2
DIV
POP
POP
PUSH $R1
PUSH $R0
ADD
POP
POP
PUSH 2
PUSH $R0
DIV
POP
POP
PUSH $R0
OUT


